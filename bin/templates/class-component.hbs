import React from 'react'{{#if useSemicolons}};{{/if}}
{{#if generatePropTypes}}
import PropTypes from 'prop-types'{{#if useSemicolons}};{{/if}}
{{/if}}
{{#if generateCss}}
import './{{fileCase component}}.{{cssExtension}}'{{#if useSemicolons}};{{/if}}
{{/if}}
{{#if generateTypescriptProps}}

export type {{classCase component}}State = {}{{#if useSemicolons}};{{/if}}

export type {{classCase component}}Props = {}{{#if useSemicolons}};{{/if}}
{{/if}}

export class {{classCase component}} extends React.Component{{#if generateTypescriptProps}}<{{classCase component}}Props, {{classCase component}}State>{{/if}} {
    {{#ifCond generatePropTypes '&&' useTypescript}}
    public static propTypes = {}{{#if useSemicolons}};{{/if}}

    {{/ifCond}}
    constructor(props{{#if generateTypescriptProps}}: {{classCase component}}Props{{/if}}) {
        super(props){{#if useSemicolons}};{{/if}}
    }

    render() {
        return (
            <div>Hello {{classCase component}}!</div>
        ){{#if useSemicolons}};{{/if}}
    }
}
{{#if generatePropTypes}}
{{#unless useTypescript}}

{{classCase component}}.propTypes = {}{{#if useSemicolons}};{{/if}}
{{/unless}}
{{/if}}

export default {{classCase component}}{{#if useSemicolons}};{{/if}}